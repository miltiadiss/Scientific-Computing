function x = tridiagonal_1084661(A, B)
   
    D = diag(A); % Κατασκευάζουμε το διαγώνιο μητρώο D
    L = diag(A, -1); % Κατασκευάζουμε το κάτω τριγωνικό μητρώο L
    U = diag(A, 1); % Κατασκευάζουμε το άνω τριγωνικό μητρώο U
    L = [0; L]; % Προσθήκη ενός μηδενικού στην αρχή του μητρώου L
    U = [U; 0]; % Προσθήκη ενός μηδενικού στο τέλος του μητρώου U

    n = length(D);
    x = zeros(n, length(B)); % Μητρώο όπου αποθηκεύoνται οι λύσεις x των συστημάτων Ax = b

    for k = 1:length(B) % Επίλυση για κάθε δεξί μέλος του B (διάνυσμα b)
        bk = B(:, k); % Κρατάμε ως διάνυσμα b τη k-στήλη του μητρώου Β

        D1 = D - L .* (U ./ D); % Πρώτο βήμα επαναληπτικού αλγορίθμου επίλυσης με D(1)=D-LD^(-1)U
        L1 = L .* (L ./ D); % L(1)=LD^(-1)L
        U1 = U .* (U ./ D); % U(1)=UD^(-1)U
        b1 = bk + L .* (bk ./ D) + U .* (bk ./ D); % b(1)=b+L(D^(-1)b)+U(D^(-1)b)
    
        y = zeros(n, 1); % Λύνουμε το μετασχηματισμένο σύστημα

        y(1) = b1(1) / D1(1); % Πρώτο βήμα
        for i = 2:n % Προς τα εμπρός υπολογισμοί
            y(i) = (b1(i) - L1(i) * y(i-1)) / D1(i);
        end
    
        x(n, k) = y(n);
        for i = n-1:-1:1 % Προς τα πίσω αντικατάσταση
            x(i, k) = y(i) -U1(i) * x(i+1, k);
        end
    end
end
