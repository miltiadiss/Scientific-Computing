function x = tridiagonal_1084661(A, B)
   
    A0 = A; % Ξεκινάμε διασπώντας το μητρώο Α(0) σε D, L, U
    D = diag(diag(A0)); % Κατασκευάζουμε το διαγώνιο μητρώο D
    L = diag(diag(A0, -1),-1); % Κατασκευάζουμε το κάτω τριγωνικό μητρώο L
    U = diag(diag(A0, 1),1); % Κατασκευάζουμε το άνω τριγωνικό μητρώο U

    % Μετασχηματίζουμε τα D, L, U σε D(1), L(1), U(1)
    D1 = D - L * diag(1 ./ diag(D)) * U - U * diag(1 ./ diag(D)) * L; 
    L1 = L * diag(1 ./ diag(D)) * L; 
    U1 = U * diag(1 ./ diag(D)) * U; 
    A1 = D1 - L1 - U1; % Μετασχηματίζουμε το μητρώο Α(0) σε Α(1) 

    % Μετασχηματίζουμε τα διανύσματα b(0) του μητρώου B(0) σε b(1) στο
    % μητρώο Β(1) οπότε ολοκληρώνεται το πρώτο βήμα του αλγορίθμου
    B0 = B;
    B1 = B0 + L * diag(1 ./ diag(D)) * B0 + U * diag(1 ./ diag(D)) * B0;

    % Aρχικοποιούμε τα μητρώα Α(m) με τις πρώτες τιμές που θα χρησιμοποιήσουμε παρακάτω στον
    % επαναληπτικό αλγόριθμο
    Am = A1; 
    Dm = D1;
    Lm = L1;
    Um = U1;
    disp(Am); % Εκτυπώνουμε το πρώτο τροποποιημένο μητρώο Α(1) απο τα συνολικά m που θα χρειαστούν
  
    for i = 1 : ceil(log2(size(A) / 4)) + 1 % Αν το μετασχηματισμένο μητρώο δεν έχει φτάσει στη κατάλληλη μορφή συνεχίζουμε να το μετασχηματίζουμε άλλες i φορές μέχρι να φτάσουμε στο Α(m)
        Dmplus1 = Dm - Lm * diag(1 ./ diag(Dm)) * Um - Um * diag(1 ./ diag(Dm)) * Lm; % Βρίσκουμε το D(m+1)
        Lmplus1 = Lm * diag(1 ./ diag(Dm)) * Lm; % Βρίσκουμε το L(m+1)
        Umplus1 = Um * diag(1 ./ diag(Dm)) * Um; % Βρίσκουμε το U(m+1)
            
        Amplus1 = Dmplus1 - Lmplus1 - Umplus1; % Μετασχηματίζουμε το μητρώο Α(m) σε Α(m+1) 
        disp(num2str(Amplus1));

        Dm = Dmplus1; % Θέτουμε για την επόμενη επανάληψη σαν προηγούμενο μητρώο το D(m+1)
        Lm = Lmplus1; % Θέτουμε για την επόμενη επανάληψη σαν προηγούμενο μητρώο το L(m+1)
        Um = Umplus1; % Θέτουμε για την επόμενη επανάληψη σαν προηγούμενο μητρώο το U(m+1)

        if i == ceil(log2(size(A) / 4)) + 1 % Αν φτάσουμε στο τελευταίο βήμα ο αλγόριθμος τερματίζει και ξεκινάμε να λύσουμε το σύστημα
            for j = 1:size(B,2)
                x(:, j) =  Amplus1 \ B1(:, j); % Το A(m+1) είναι διαγώνιο και λύνουμε το σύστημα A(m+1)x = B(1) απευθείας 
            end
        end
    end
end
