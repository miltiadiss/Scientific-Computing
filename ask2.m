% Ερώτημα 1
n = 5; % Ορισμός του μεγέθους των μητρώων Α, Β διάστασης nxn

D = randn(n, 1); % Τυχαίο διαγώνιο μητρώο D
D_inv = diag(1 ./ diag(diag(D))); %
L = randn(n-1, 1); % Τυχαίο αυστηρά κάτω τριγωνικό μητρώο L
U = randn(n-1, 1); % Τυχαίο αυστηρά άνω τριγωνικό μητρώο U
A = diag(D) - diag(L, -1) - diag(U, 1); % Δημιουργία του τριδιαγώνιου μητρώου A
B = randn(n, n); % Δημιουργία ενός τυχαίου μητρώου B διάστασης nxn, δηλαδή έχουμε n διανύσματα b nx1 για n διαφορετικά συστήματα Ax = b

disp('Τριδιαγώνιο Μητρώο Α:');
disp(num2str(A));

disp('Διανύσματα b (Στήλες Μητρώου Β):')
disp(num2str(B));

n = length(D);
x = zeros(n, length(B)); % Μητρώο όπου αποθηκεύoνται οι λύσεις x των συστημάτων Ax = b

for k = 1:length(B) % Επίλυση για κάθε δεξί μέλος του B (διάνυσμα b)
    bk = B(:, k); % Κρατάμε ως διάνυσμα b τη k-στήλη του μητρώου Β
    
    D1 = diag(D) - diag(L, -1) * D_inv * diag(U, 1) - diag(U, 1) * D_inv * diag(L, -1); % Πρώτο βήμα επαναληπτικού αλγορίθμου επίλυσης με D(1)=D-LD^(-1)U
    L1 = diag(L, -1) * D_inv * diag(L, -1); % L(1)=LD^(-1)L
    U1 = diag(U, 1) * D_inv * diag(U, 1); % U(1)=UD^(-1)U
    b1 = bk + diag(L, -1) * D_inv * bk + diag(U, 1) * D_inv * bk; % b(1)=b+L(D^(-1)b)+U(D^(-1)b)
    A1 = D1 - L1 - U1; 
    disp(num2str(A1));
end

x = tridiagonal_1084661(A, B); % Επιλύουμε τα συστήματα με τη συνάρτηση που κατασκευάσαμε 
disp('Λύσεις συστημάτων Αx = b:')
disp(num2str(x));

% Ερώτημα 3
A = randn(n, n); % Τυχαία γέμισμα του μητρώου
A = A + diag(sum(abs(A), 2)); % Δημιουργία τυχαίου διαγώνια κυρίαρχου μητρώου
disp('Διαγώνια Κυρίαρχο Μητρώο Α:');
disp(num2str(A));

x = tridiagonal_1084661(A, B); % Επιλύουμε τα συστήματα με τη συνάρτηση που κατασκευάσαμε 
disp('Λύσεις συστημάτων Αx = b:')
disp(num2str(x));

U = triu(A, 1); % Υπολογισμός υπερδιαγωνίου
L = tril(A, -1); % Υπολογισμός υποδιαγωνίου

l2_norm_U = norm(U, inf); % Νόρμα L2 υπερδιαγωνίου
fprintf('Νόρμα υπερδιαγωνίου: %.4f\n', l2_norm_U);
l2_norm_L = norm(L, inf); % Νόρμα L2 υποδιαγωνίου
fprintf('Νόρμα υποδιαγωνίου: %.4f\n', l2_norm_L);
